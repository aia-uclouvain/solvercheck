<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>be.uclouvain</groupId>
    <artifactId>SolverCheck</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.source>1.10</maven.compiler.source>
        <maven.compiler.target>1.10</maven.compiler.target>

        <site.version>3.7.1</site.version>
        <checkstyle.version>3.0.0</checkstyle.version>
        <jacoco.version>0.8.2</jacoco.version>

        <spotbugs.version>3.1.6</spotbugs.version>
        <spotbugs.effort>Max</spotbugs.effort>
        <spotbugs.threshold>Low</spotbugs.threshold>
    </properties>

    <build>
        <plugins>
            <!--
                Generate a project site with many useful reports with the
                `mvn site` command.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${site.version}</version>
            </plugin>

            <!--
                Installs JaCoCo agent to collect coverage data.
            -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <!--
                CHECKSTYLE::
                To ensure that the code follows some well established coding
                guidelines.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.version}</version>
                <configuration>
                    <!--
                        Use my own checkstyle configuration which adapts SUN
                        rules set to allow:
                        1. shadowing by constructor parameters
                        2. targetted warning suppression through annotations
                    -->
                    <configLocation>./checkstyle.xml</configLocation>
                    <!-- Ignore the style of tests source code -->
                    <sourceDirectories>
                        ${project.build.sourceDirectory}
                    </sourceDirectories>
                </configuration>
            </plugin>

            <!--
                SPOTBUGS::
                To preemptively identify some potential bugs in the code of
                the project.
            -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs.version}</version>
                <configuration>
                    <effort>${spotbugs.effort}</effort>
                    <threshold>${spotbugs.threshold}</threshold>
                </configuration>
            </plugin>

            <!--
                JACOCO::
                To measure the fraction of the code which has been covered by
                tests.
            -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
            </plugin>
        </plugins>
    </reporting>



    <dependencies>
        <!--
            QuickTheories the PBT library for java.

            Note:
            It is not test scoped because it is at the heart from what
            SolverCheck should do
        -->
        <dependency>
            <groupId>org.quicktheories</groupId>
            <artifactId>quicktheories</artifactId>
            <version>0.25</version>
        </dependency>

        <!--
            AssertJ provides an assertion DSL to evaluate your solver. Hence,
            it is not test
            scoped either.
        -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.11.1</version>
        </dependency>

        <!-- ####### TEST DEPENDENCIES ##################################### -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>